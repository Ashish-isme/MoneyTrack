@page "/"
@using MoneyTrack.Models
@using MoneyTrack.Services
@inject IUserService userService
@inject NavigationManager navigationManager
@inject AuthenticationStateService authStateService

<section class="bg-light py-5 py-md-5" style="margin-top: 50px;">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-12 col-sm-10 col-md-8 col-lg-6 col-xl-5 col-xxl-4">
                <div class="card border border-light-subtle rounded-3 shadow-sm">
                    <div class="card-body p-3 p-md-4 p-xl-5">
                        <div class="text-center mb-3">
                            <a href="/">
                                <img src="./logo.svg" alt="BootstrapBrain Logo" width="175" height="57">
                            </a>
                        </div>
                        <h2 class="fs-6 fw-normal text-center text-secondary mb-4">Sign in to your account</h2>
                        <form>
                            <div class="row gy-2 overflow-hidden">
                                <div class="col-12">
                                    <div class="form-floating mb-3">
                                        <input type="text" class="form-control" id="username" @bind="username" placeholder="Enter your username" required>
                                        <label for="username" class="form-label">Username</label>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="form-floating mb-3">
                                        <input type="password" class="form-control" id="password" @bind="password" placeholder="Enter your password" required>
                                        <label for="password" class="form-label">Password</label>
                                    </div>
                                </div>
                                <div class="col-12">
                               
                                </div>
                                <div class="col-12">
                                    <div class="d-grid my-3">
                                        <button type="button" class="btn btn-primary custom-btn" @onclick="LoginUser">Log in</button>
                                    </div>
                                 
                                </div>
                                <div class="col-12">
                                    <p class="m-0 text-secondary text-center">
                                        Don't have an account?
                                        <a href="/register" class="link-primary text-decoration-none">Sign up</a>
                                    </p>
                                </div>
                            </div>
                        </form>
                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <p class="text-danger text-center mt-3">@errorMessage</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private string username;
    private string password;
    private string errorMessage;

    private async Task LoginUser()
    {
        try
        {
            var users = await userService.LoadUsersAsync();
            var user = users.FirstOrDefault(u => u.UserName == username && u.Password == HashPassword(password));

            if (user != null)
            {
                authStateService.SetAuthenticatedUser(user);
                navigationManager.NavigateTo("/dashboard");
            }
            else
            {
                errorMessage = "Invalid username or password.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred during login: {ex.Message}";
        }
    }

    private string HashPassword(string password)
    {
        using (var sha256 = System.Security.Cryptography.SHA256.Create())
        {
            var bytes = System.Text.Encoding.UTF8.GetBytes(password);
            var hash = sha256.ComputeHash(bytes);
            return Convert.ToBase64String(hash);
        }
    }
}
